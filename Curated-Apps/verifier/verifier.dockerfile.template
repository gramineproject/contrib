# SPDX-License-Identifier: LGPL-3.0-or-later
# Copyright (C) 2022 Intel Corporation

FROM ubuntu:18.04

RUN apt-get update \
    && env DEBIAN_FRONTEND=noninteractive apt-get install -y \
    build-essential \
    pkg-config \
    curl \
    git \
    gnupg2 \
    wget

# Installing Azure DCAP Quote Provider Library (az-dcap-client).
# Here, the version of az-dcap-client should be in sync with the az-dcap-client
# version used for quote generation. User can replace the below package with the
# latest package.
RUN wget https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/a/az-dcap-client/az-dcap-client_1.10_amd64.deb \
 && dpkg -i az-dcap-client_1.10_amd64.deb

RUN echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' \
    > /etc/apt/sources.list.d/intel-sgx.list \
    && wget https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key \
    && env APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn apt-key add intel-sgx-deb.key

RUN env DEBIAN_FRONTEND=noninteractive apt-get update \
    && env DEBIAN_FRONTEND=noninteractive apt-get install -y libsgx-dcap-quote-verify-dev

RUN wget https://packages.gramineproject.io/pool/main/p/python-toml/python3-toml_0.10.0-1_all.deb
RUN wget https://packages.gramineproject.io/pool/main/c/cjson/libcjson1_1.7.10-1.1_amd64.deb
RUN wget https://packages.gramineproject.io/pool/main/g/gramine/gramine-dcap_1.3.1-1_amd64.deb
RUN wget https://packages.gramineproject.io/pool/main/g/gramine/gramine-ratls-dcap_1.3.1-1_amd64.deb

RUN env DEBIAN_FRONTEND=noninteractive apt-get install -y \
    ./gramine-dcap_1.3.1-1_amd64.deb \
    ./gramine-ratls-dcap_1.3.1-1_amd64.deb \
    ./libcjson1_1.7.10-1.1_amd64.deb \
    ./python3-toml_0.10.0-1_all.deb

RUN git clone --depth 1 --branch v1.3.1 https://github.com/gramineproject/gramine.git

ARG server_dcap_pf="n"
RUN if [ $server_dcap_pf="y" ]; then \
        sed -i "s|verify_measurements_callback,|NULL,|g" \
        "gramine/CI-Examples/ra-tls-secret-prov/secret_prov_pf/server.c"; \
    fi

RUN mkdir -p /ra-tls-secret-prov/secret_prov_minimal
RUN cd gramine/CI-Examples/ra-tls-secret-prov/ \
    && make clean && make dcap \
    && cp secret_prov_minimal/server_dcap /ra-tls-secret-prov/secret_prov_minimal/

RUN rm -rf gramine >/dev/null 2>&1

WORKDIR /ra-tls-secret-prov/secret_prov_minimal

ENTRYPOINT ["./server_dcap"]
